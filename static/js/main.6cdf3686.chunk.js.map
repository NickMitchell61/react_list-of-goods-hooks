{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReverse","className","type","onClick","ALPHABET","LENGTH","goods","visibleGoods","sort","firstItem","secondItem","length","reverse","getReorderedGoods","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAU,WACrB,IAuBA,EAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAmC,IAAbJ,EAAkB,WAAa,IAC9DM,QAvBW,WACjBL,GAAY,kBAAMN,EAASY,aAmBvB,iCAQA,wBACEF,KAAK,SACLD,UAAS,4BAAsC,IAAbJ,EAAkB,WAAa,IACjEM,QA3Ba,WACnBL,GAAY,kBAAMN,EAASa,WAuBvB,4BAQA,wBACEH,KAAK,SACLD,UAAS,4BAAyBF,EAA2B,GAAb,YAChDI,QA/BQ,WACdH,GAAW,kBAAOD,MA2Bd,wBAQIA,IAAeF,IACjB,wBACEK,KAAK,SACLD,UAAU,4BACVE,QApCI,WACZH,GAAW,kBAAM,KACjBF,GAAY,kBAAMN,EAASI,SA+BrB,sBAUJ,6BAjFsB,SACxBU,EADwB,GAGpB,IADFT,EACC,EADDA,SAAUE,EACT,EADSA,WAENQ,EAAY,YAAOD,GAgBzB,OAdiB,IAAbT,GACFU,EAAaC,OAGE,IAAbX,GACFU,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAOD,EAAUE,OAASD,EAAWC,UAIrCZ,GACFQ,EAAaK,UAGRL,EA8DFM,CACCpB,EACA,CAAEI,WAAUE,eACZe,KAAI,SAACC,GAAD,OACJ,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YChHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6cdf3686.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport const App: FC = () => {\n  const getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    if (sortType === 1) {\n      visibleGoods.sort();\n    }\n\n    if (sortType === 2) {\n      visibleGoods.sort((firstItem, secondItem) => {\n        return firstItem.length - secondItem.length;\n      });\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const sortByAlph = () => {\n    setSortType(() => SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(() => SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setReverse(() => !isReversed);\n  };\n\n  const reset = () => {\n    setReverse(() => false);\n    setSortType(() => SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${!(sortType === 1) ? 'is-light' : ''}`}\n          onClick={sortByAlph}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${!(sortType === 2) ? 'is-light' : ''}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!(isReversed) ? 'is-light' : ''}`}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {!(!isReversed && !sortType) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(\n          goodsFromServer,\n          { sortType, isReversed },\n        ).map((item) => (\n          <li data-cy=\"Good\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}